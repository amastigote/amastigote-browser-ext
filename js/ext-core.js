// Generated by CoffeeScript 1.12.7
(function() {
  var __portKey, __serverKey, dispatchQuery, generalQuery;

  __serverKey = 'cnServer';

  __portKey = 'cnPort';

  this.Status = {
    COMPLETE: 0x0,
    ERROR: 0x1,
    EXCEPTION: 0x2
  };

  this.create = function(payload, success_callback) {
    return dispatchQuery(JSON.stringify(payload), 'item', 'POST', success_callback);
  };

  this.update = function(payload, success_callback) {
    return dispatchQuery(JSON.stringify(payload), 'item', 'PUT', success_callback);
  };

  this.remove = function(payload, success_callback) {
    return dispatchQuery(JSON.stringify(payload), 'item', 'DELETE', success_callback);
  };

  this.get_item = function(payload, success_callback) {
    return dispatchQuery(payload, 'item', 'GET', success_callback);
  };

  this.get_tags = function(tag_serial, success_callback) {
    return dispatchQuery(tag_serial, 'tag', 'GET', success_callback);
  };

  dispatchQuery = function(payload, urlEndPoint, query_method, success_callback) {
    if (this.server && this.port) {
      return generalQuery(payload, urlEndPoint, query_method, success_callback, server, port);
    } else if (browser) {
      return browser.storage.local.get([__serverKey, __portKey]).then(function(result) {
        var port, server;
        if (result[__serverKey] !== void 0 && result[__portKey] !== void 0) {
          server = result[__serverKey];
          port = result[__portKey];
          return generalQuery(payload, urlEndPoint, query_method, success_callback, server, port);
        }
      });
    }
  };

  generalQuery = function(payload, urlEndPoint, query_method, success_callback, server, port) {
    return $.ajax({
      type: query_method,
      url: "http://" + server + ":" + port + "/" + urlEndPoint,
      data: payload,
      contentType: 'application/json',
      dataType: 'json',
      crossDomain: true,
      crossOrigin: true,
      success: success_callback
    });
  };

}).call(this);
