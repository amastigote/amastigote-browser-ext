// Generated by CoffeeScript 1.12.7
(function() {
  var bindCategoryListeners, bindRowListeners, currentPage, filteredTags, loadCategories, loadItems, packFilterParam, rebindGlobalButtons, urlObject, urlString;

  currentPage = 0;

  filteredTags = [];

  urlString = window.location.href;

  urlObject = new URL(urlString);

  window.onerror = function(errorMessage, scriptURI, lineNumber, columnNumber, error) {
    $('#errMessage').text(errorMessage);
    $('#errLocation').text(scriptURI + ":" + lineNumber + ":" + columnNumber);
    $('#errObject').text(JSON.stringify(error));
    $('#buttonGithubIssue').click(function() {
      return window.open('https://github.com/amastigote/amastigote-browser-ext/issues');
    });
    return $('#errorModal').modal({
      show: true
    });
  };

  loadCategories = function(categoryContainer, container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags) {
    return get_category(function(result) {
      var item, j, len, ref;
      categoryContainer.empty();
      if (result['stat'] === Status.COMPLETE) {
        ref = result['obj'];
        for (j = 0, len = ref.length; j < len; j++) {
          item = ref[j];
          categoryContainer.append(generateItem(item));
        }
        if (result['obj'].length > 0) {
          bindCategoryListeners(unescape(result['obj'][0]['name']), categoryContainer, container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags);
          return loadItems({
            page: 0,
            categoryName: escape(unescape(result['obj'][0]['name']))
          }, container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags, categoryContainer, unescape(result['obj'][0]['name']));
        } else {
          categoryContainer.append("<a href='#' class='list-group-item list-group-item-action disabled' style='background-color:rgba(0,0,0,.075)'>暂无分类</a>");
          return container.append("<tr style='font-size: 15px; height: 49px'><td colspan='4' style='color: #858D95'>暂无结果</td></tr>");
        }
      } else if (result['stat'] === Status.ERROR) {
        return container.append("<tr style='font-size: 15px; height: 49px'><td colspan='4' style='color: #858D95'>暂无结果</td></tr>");
      }
    });
  };

  loadItems = function(payload, container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags, categoryContainer, category) {
    pageIndicator.closest('div').css('visibility', 'hidden');
    return list_items(payload, function(result) {
      var item, j, len, ref;
      container.empty();
      if (result['stat'] === Status.COMPLETE) {
        currentPage = result['obj']['currentPage'];
        btnPre.attr('disabled', result['obj']['isFirst']);
        btnSuc.attr('disabled', result['obj']['isLast']);
        pageIndicator.text(currentPage);
        ref = result['obj']['items'];
        for (j = 0, len = ref.length; j < len; j++) {
          item = ref[j];
          container.append(generateRow(item, category));
        }
        bindRowListeners(inputTags, btnFilter, categoryContainer);
      } else {
        if (result['stat'] === Status.ERROR) {
          btnPre.attr('disabled', true);
          btnSuc.attr('disabled', true);
          container.append("<tr style='font-size: 15px; height: 49px'><td colspan='4' style='color: #858D95'>暂无结果</td></tr>");
        }
      }
      pageIndicator.closest('div').css('visibility', 'visible');
      rebindGlobalButtons(category, categoryContainer, container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags);
      return $("html, body").animate({
        scrollTop: 0
      }, 500);
    });
  };

  bindRowListeners = function(inputTags, btnFilter, categoryContainer) {
    $('.editHref').click(function(e) {
      e.preventDefault();
      showEditModal(this, categoryContainer.children().map(function(i, e) {
        return $(e).text();
      }));
      return false;
    });
    return $('.tagHref').click(function() {
      inputTags.val($(this.childNodes[0]).text());
      return btnFilter.trigger('click');
    });
  };

  bindCategoryListeners = function(selectedCategory, categoryContainer, container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags) {
    var item, j, len, ref, results;
    ref = categoryContainer.children();
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      item = ref[j];
      $(item).removeClass('active');
      if (selectedCategory === item.text) {
        $(item).addClass('active');
      }
      $(item).click(function(e) {
        var item0, k, len1, ref1;
        e.preventDefault();
        currentPage = 0;
        inputTags.val('');
        ref1 = categoryContainer.children();
        for (k = 0, len1 = ref1.length; k < len1; k++) {
          item0 = ref1[k];
          $(item0).removeClass('active');
        }
        $(this).addClass('active');
        selectedCategory = this.text;
        return loadItems({
          page: 0,
          categoryName: escape(this.text)
        }, container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags, categoryContainer, selectedCategory);
      });
      results.push(false);
    }
    return results;
  };

  packFilterParam = function(rawVal, page, category) {
    filteredTags = rawVal.replace(/[， 、]/g, ',').split(',').map(function(e) {
      return e.trim();
    }).filter(function(e) {
      return e !== '';
    }).map(function(e) {
      return escape(e);
    });
    return {
      page: page,
      tag: filteredTags,
      categoryName: category
    };
  };

  $(function() {
    var btnClear, btnFilter, btnPre, btnSuc, categoryContainer, container, inputTags, pageIndicator;
    container = $('#tableBody');
    btnPre = $('.btnPre');
    btnSuc = $('.btnSuc');
    pageIndicator = $('.pageIndicator');
    btnFilter = $('#btnFilter');
    btnClear = $('#btnClear');
    inputTags = $('#filterByTags');
    categoryContainer = $('#category-container');
    $('.form-inline').submit(function(e) {
      e.preventDefault();
      btnFilter.trigger('click');
      return false;
    });
    btnClear.click(function() {
      inputTags.val('');
      return btnFilter.trigger('click');
    });
    inputTags.val('');
    loadCategories(categoryContainer, container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags);
    return get_tags(function(result) {
      var extractLast, split;
      split = function(val) {
        return val.split(/,\s*/);
      };
      extractLast = function(term) {
        return split(term).pop();
      };
      return $('#filterByTags').autocomplete({
        minLength: 1,
        source: function(request, response) {
          return response($.ui.autocomplete.filter(result['obj'].map(function(e) {
            return escapeChars(unescape(e.trim()));
          }), extractLast(request.term)));
        }
      }, {
        focus: function() {
          return false;
        },
        select: function(event, ui) {
          var terms;
          terms = split(this.value);
          terms.pop();
          terms.push(ui.item.value);
          terms.push("");
          this.value = terms.join(", ");
          return false;
        }
      });
    });
  });

  this.escapeChars = function(string) {
    return string.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
  };

  this.generateRow = function(item, category) {
    var tagsBadges;
    tagsBadges = item['tags'].map(function(e) {
      return "<a class='tagHref' href='#'><span class='badge badge-dark' style='font-size: 11px; vertical-align: middle'>" + (escapeChars(unescape(e['name']))) + "</span></a>";
    }).join('&nbsp;');
    return "<tr><td style='vertical-align: middle'>" + item['id'] + "</td><td style='vertical-align: middle; font-weight: bold; font-size: 15px'><a href='" + item['url'] + "'>" + (escapeChars(unescape(item['title']))) + "</a></td><td style='vertical-align: middle'>" + tagsBadges + "</td><td style='font-size: 13px; vertical-align: middle'><a href='#' itemprop='" + category + "' class='editHref'><i class='fa fa-pencil fa-1'></i>&nbsp;编辑</a></td></tr>";
  };

  this.generateItem = function(item) {
    return "<a href='#' class='list-group-item list-group-item-action'>" + (escapeChars(unescape(item['name']))) + "</a>";
  };

  rebindGlobalButtons = function(selectedCategory, categoryContainer, container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags) {
    btnPre.unbind('click');
    btnPre.click(function() {
      return loadItems(packFilterParam(filteredTags, currentPage - 2, selectedCategory), container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags, categoryContainer, selectedCategory);
    });
    btnSuc.unbind('click');
    btnSuc.click(function() {
      return loadItems(packFilterParam(filteredTags, currentPage, selectedCategory), container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags, categoryContainer, selectedCategory);
    });
    btnFilter.unbind('click');
    return btnFilter.click(function() {
      return loadItems(packFilterParam(inputTags.val(), 0, selectedCategory), container, btnPre, btnSuc, btnFilter, pageIndicator, inputTags, categoryContainer, selectedCategory);
    });
  };

}).call(this);
