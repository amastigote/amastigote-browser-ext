// Generated by CoffeeScript 1.12.7
(function() {
  var collectItem, currentRow, editModal, removeBtnModal, submitBtnModal, tagsInputModal, titleInputModal, urlInputModal;

  titleInputModal = $('#modalInputTitle');

  urlInputModal = $('#modalInputUrl');

  tagsInputModal = $('#modalInputTags');

  removeBtnModal = $('#editModalBtnRemove');

  submitBtnModal = $('#editModalBtnSubmit');

  currentRow = null;

  editModal = $('#editModal');

  editModal.on('hidden.bs.modal', function() {
    titleInputModal.val('');
    urlInputModal.val('');
    return tagsInputModal.val('');
  });

  this.showEditModal = function(p) {
    var i, spans, tags, title, url;
    getTags(function(result) {
      var extractLast, split;
      split = function(val) {
        return val.split(/,\s*/);
      };
      extractLast = function(term) {
        return split(term).pop();
      };
      return $('#modalInputTags').autocomplete({
        minLength: 1,
        source: function(request, response) {
          return response($.ui.autocomplete.filter(result['obj'].map(function(e) {
            return escapeChars(unescape(e.trim()));
          }), extractLast(request.term)));
        }
      }, {
        focus: function() {
          return false;
        },
        select: function(event, ui) {
          var terms;
          terms = split(this.value);
          terms.pop();
          terms.push(ui.item.value);
          terms.push("");
          this.value = terms.join(", ");
          return false;
        }
      });
    });
    currentRow = p.closest('tr');
    title = currentRow.childNodes[1].childNodes[0].text;
    url = currentRow.childNodes[1].childNodes[0].getAttribute('href');
    spans = currentRow.childNodes[2].childNodes;
    if (spans.length === 0) {
      tags = '';
    } else {
      tags = ((function() {
        var j, ref, results;
        results = [];
        for (i = j = 0, ref = spans.length - 1; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
          if ($(spans.item(i).childNodes[0]).is('span')) {
            results.push($(spans.item(i)).text());
          }
        }
        return results;
      })()).join(', ');
    }
    editModal.modal({
      show: true,
      backdrop: 'static'
    });
    titleInputModal.val(title);
    urlInputModal.val(url);
    return tagsInputModal.val(tags);
  };

  submitBtnModal.click(function() {
    return update(collectItem(), function(result) {
      editModal.modal('hide');
      $(currentRow).html($($.parseHTML(generateRow(result['obj']))).html());
      return $(currentRow).click(function() {
        return showEditModal(this);
      });
    });
  });

  removeBtnModal.click(function() {
    return remove(collectItem(), function() {
      editModal.modal('hide');
      return $(currentRow).hide();
    });
  });

  collectItem = function() {
    return {
      title: escape(titleInputModal.val()),
      url: urlInputModal.val(),
      tags: tagsInputModal.val().replace(/[， 、]/g, ',').split(',').map(function(e) {
        return e.trim();
      }).filter(function(e) {
        return e !== '';
      }).map(function(e) {
        return escape(e);
      })
    };
  };

}).call(this);
